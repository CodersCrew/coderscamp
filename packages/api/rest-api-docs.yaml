openapi: 3.0.3
info:
  title: CodersCamp REST API
  description: Internal REST API for CodersCamp
  version: '1.0'
tags:
  - name: User Registration
    description: Registration of platform user. After that authentication will be possible.
  - name: Authentication
    description: Internal jwt-token & cookie based authentication.
  - name: Email Confirmation
    description: Authorization of any operation by email confirmation.
  - name: User Profile
    description: Personal data about users.
  - name: Learning Materials
    description: Generating and retrieving checklist URL.
  - name: Course Progress
    description: Tracking course progress by participant.
  - name: Courses
    description: CRUD for platform courses. Just dates are supported. No impact on current course.
  - name: Process.st
    description: WebHooks endpoints. Integration with checklist platform.
    externalDocs:
      description: Find out more
      url: https://www.process.st/webhooks/
servers:
  - url: /api
    description: REST API v1
paths:
  /user-registration:
    post:
      summary: Register new user account. Email must be unique.
      operationId: UserRegistrationPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationPostRequestBody'
      responses:
        201:
          description: 'User successfully registered'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistrationPostResponseBody'
        400:
          $ref: '#/components/responses/BadRequest'
      tags:
        - User Registration
  /auth/login:
    post:
      summary: Store user JWT Token in "access_token" cookie.
      operationId: Auth_login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthLoginPostRequestBody'
      responses:
        204:
          description: Authorization token successfully received as cookie
      tags:
        - Authentication
  /auth/logout:
    post:
      summary: Remove JWT Token from cookies.
      operationId: Auth_logout
      responses:
        201:
          description: ''
      tags:
        - Authentication
  /email-confirmation:
    post:
      summary: Request email confirmation for some user action. May be used for resend of confirmation email.
      operationId: EmailConfirmation_emailConfirmation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailConfirmationPostRequestBody'
      responses:
        204:
          description: 'Email confirmation was successfully requested. Email was sent.'
      tags:
        - Email Confirmation
  /email-confirmation/approval:
    post:
      summary: Confirm email for given user.
      operationId: ConfirmUserRegistrationPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApproveEmailConfirmationBody'
      responses:
        204:
          description: 'Mail for user successfully confirmed'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
      tags:
        - Email Confirmation
  /users:
    get:
      summary: All users registered in the platform
      operationId: UserProfile_getAll
      responses:
        200:
          description: 'All users registered in the platform'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileGetResponseBody'
      tags:
        - User Profile
  /users/me:
    get:
      summary: Currently logged uer
      operationId: UserProfile_getMe
      responses:
        200:
          description: 'Current user logged into the platform'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileGetMeResponseBody'
      tags:
        - User Profile
  /learning-materials:
    post:
      summary: Generate user personal url for current course learning materials.
      operationId: LearningMaterialsUrl_generateUserLearningResourcesUrl
      responses:
        204:
          description: Learning materials url for current course was generated.
      tags:
        - Learning Materials
    get:
      summary: Personal url for current course learning materials.
      operationId: LearningMaterials_getLearningMaterial
      responses:
        200:
          description: 'Learning materials url was generated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LearningMaterialsGetResponseBody'
      tags:
        - Learning Materials
  /course-progress:
    get:
      summary: How many course activites was completed by user.
      operationId: CourseProgress_getCourseProgress
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseProgressGetResponseBody'
      tags:
        - Course Progress
  /courses:
    get:
      summary: All courses in the platform
      operationId: Courses_getAll
      responses:
        200:
          description: 'All courses available in the platform'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseGetResponseBody'
      tags:
        - Courses
    post:
      summary: Create new course for the platform
      operationId: Courses_createCourse
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoursePostRequestBody'
      responses:
        201:
          description: 'Created course'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoursePostResponseBody'
      tags:
        - Courses
  /process-st/events/task-checked-unchecked:
    post:
      summary: Process.st should invoke this endpoint when task was checked or unchecked.
      operationId: LearningMaterialsTask_taskCheckedUnchecked
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessStTaskCheckedUncheckedWebHookRequestBody'
      responses:
        200:
          description: 'Process.st event was processed'
      tags:
        - Process.st
components:
  schemas:
    UserRegistrationPostRequestBody:
      description: User to be registered
      type: object
      properties:
        fullName:
          description: Full name of the user
          type: string
          maxLength: 100
          example: Jan Kowalski
        email:
          description: Email address of the user
          type: string
          format: email
          maxLength: 320
          example: jan.kowalski@email.com
        password:
          description: Password for the user account
          type: string
          format: password
          minLength: 3
          maxLength: 60
          example: rZBv4G_xSvY#Mbsq4U
      required:
        - fullName
        - email
        - password
    UserRegistrationPostResponseBody:
      type: object
      properties:
        userId:
          description: Identifier of registered user
          type: string
          example: 2a7d8676-4db6-4e04-a5d1-dd48797a3917
      required:
        - userId
    AuthLoginPostRequestBody:
      description: Credentials of user to be logged
      type: object
      properties:
        email:
          description: Email address of the user
          type: string
          format: email
          maxLength: 320
          example: jan.kowalski@email.com
        password:
          description: Password of the user
          type: string
          format: password
          minLength: 3
          maxLength: 60
          example: rZBv4G_xSvY#Mbsq4U
      required:
        - email
        - password
    EmailConfirmationPostRequestBody:
      type: object
      properties:
        confirmationFor:
          description: Name of operation to be confirmed by email
          type: string
          example: user-registration
      required:
        - confirmationFor
    ApproveEmailConfirmationBody:
      type: object
      properties:
        confirmationToken:
          description: Given confirmation token created meanwhile registration
          type: string
          example: someExample.Token
      required:
        - confirmationFor
    CourseProgressGetResponseBody:
      description: Current course progress of logged user
      type: object
      properties:
        learningMaterials:
          description: Progress of learning from materials
          type: object
          properties:
            completedTasks:
              description: How many tasks on checklist was completed
              type: number
              minimum: 0
              example: 10
          required:
            - completedTasks
      required:
        - learningMaterials
    LearningMaterialsGetResponseBody:
      type: object
      properties:
        id:
          description: Identificator of personal learning materials
          type: string
          example: jNMTGn96H8Xe3H8DbcpJOg
        url:
          description: Access url for checklist with learning materials
          type: string
          format: url
          example: https://app.process.st/runs/jNMTGn96H8Xe3H8DbcpJOg
      required:
        - id
        - url
    ProcessStTaskCheckedUncheckedWebHookRequestBody:
      type: object
      properties:
        id:
          description: Identificator of personal learning materials
          type: string
          example: jNMTGn96H8Xe3H8DbcpJOg
        type:
          description: Type of event
          type: string
          example: TaskCheckedUnchecked
        createdDate:
          description: Date when event occurred
          type: string
          format: date-time
          example: 2019-09-03T12:10:19.483+02:00
        data:
          properties:
            id:
              description: Identificator of the task
              type: string
              example: n97r3Z9bZClSK95H7shJ5g
            status:
              description: Status of the task.
              type: string
              enum:
                - NotCompleted
                - Completed
              example: Completed
      required:
        - id
        - type
    UserProfileGetMeResponseBody:
      type: object
      properties:
        id:
          description: Identificator of the user
          type: string
          example: 2a7d8676-4db6-4e04-a5d1-dd48797a3917
        fullName:
          description: Full name of the user
          type: string
          maxLength: 100
          example: Jan Kowalski
        email:
          description: Email address of the user
          type: string
          format: email
          maxLength: 320
          example: jan.kowalski@email.com
        image:
          description: URL to avatar
          type: string
          format: url
          example: https://www.gravatar.com/avatar?d=mp
      required:
        - id
        - fullName
        - email
        - image
    UserProfileGetResponseBody:
      type: array
      items:
        $ref: '#/components/schemas/UserProfileGetMeResponseBody'
    CoursePostRequestBody:
      type: object
      properties:
        dateStart:
          type: string
          format: date-time
          example: 2021-07-21T17:32:28Z
        dateEnd:
          type: string
          format: date-time
          example: 2021-07-21T17:32:28Z
      required:
        - dateStart
        - dateEnd
    CoursePostResponseBody:
      type: object
      properties:
        id:
          description: Identificator of the course
          type: string
          example: 2a7d8676-4db6-4e04-a5d1-dd48797a3917
        dateStart:
          type: string
          format: date-time
          example: 2021-07-21T17:32:28Z
        dateEnd:
          type: string
          format: date-time
          example: 2021-07-21T17:32:28Z
      required:
        - id
        - dateStart
        - dateEnd
    CourseGetResponseBody:
      type: array
      items:
        $ref: '#/components/schemas/CoursePostResponseBody'
    DefaultErrorResponseBody:
      type: object
      properties:
        message:
          type: string
          description: Error message
          example: 'Learning materials url was already generated'
      required:
        - message
    NestErrorResponseBody:
      type: object
      properties:
        statusCode:
          type: number
        message:
          type: array
          items:
            type: string
        error:
          type: string
          example: Bad Request
      required:
        - message
  responses:
    BadRequest:
      description: Incorrect request body
      content:
        'application/json':
          schema:
            oneOf:
              - $ref: '#/components/schemas/NestErrorResponseBody'
              - $ref: '#/components/schemas/DefaultErrorResponseBody'
    Forbidden:
      description: Not allowed to execute request
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/DefaultErrorResponseBody'
    Unauthorized:
      description: Invalid or missing authorization token
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/DefaultErrorResponseBody'
